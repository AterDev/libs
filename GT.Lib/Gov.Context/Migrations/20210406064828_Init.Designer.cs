// <auto-generated />
using System;
using Gov.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gov.Context.Migrations
{
    [DbContext(typeof(GovContext))]
    [Migration("20210406064828_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("AccountRole", b =>
                {
                    b.Property<byte[]>("AccountsId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("RolesId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("AccountsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("AccountRole");
                });

            modelBuilder.Entity("AuthorityGroupRole", b =>
                {
                    b.Property<byte[]>("AuthorityGroupsId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("RolesId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("AuthorityGroupsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("AuthorityGroupRole");
                });

            modelBuilder.Entity("Gov.Entity.Account", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("EmailConfirm")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("ExtendId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("HashSalt")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("LastLoginTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Password")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<bool>("PhoneConfirm")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("Email");

                    b.HasIndex("EmailConfirm");

                    b.HasIndex("ExtendId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Phone");

                    b.HasIndex("PhoneConfirm");

                    b.HasIndex("Username");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Gov.Entity.AccountExtend", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AddressDetail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("Birthday")
                        .HasColumnType("timestamp");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("County")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("NickName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Province")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RealName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("WXAvatar")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("WXOpenId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("WXUnionId")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.HasIndex("Country");

                    b.HasIndex("Province");

                    b.HasIndex("RealName");

                    b.ToTable("AccountExtends");
                });

            modelBuilder.Entity("Gov.Entity.ActionLog", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("ActionPath")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ActionType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Result")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TargetName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ActionType");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.HasIndex("Username");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlow", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("ApproveFlows");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlowRelation", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("FlowId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<byte[]>("TargetId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.ToTable("ApproveFlowRelation");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlowStatus", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("RoleId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<byte[]>("TargetId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("RoleId");

                    b.HasIndex("TargetId");

                    b.HasIndex("UserId");

                    b.ToTable("ApproveFlowStatuses");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlowSteps", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("AllApprovel")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("ApproveFlowId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<byte[]>("RoleId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApproveFlowId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Step");

                    b.HasIndex("UserId");

                    b.ToTable("ApproveFlowSteps");
                });

            modelBuilder.Entity("Gov.Entity.Article", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("CatalogId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("ExtendId")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Tags")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AuthorName");

                    b.HasIndex("CatalogId");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("ExtendId");

                    b.HasIndex("Status");

                    b.HasIndex("Title");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Gov.Entity.ArticleExtend", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ArticleExtends");
                });

            modelBuilder.Entity("Gov.Entity.Authority", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("GroupId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.HasIndex("Type");

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("Gov.Entity.AuthorityGroup", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AuthorityGroups");
                });

            modelBuilder.Entity("Gov.Entity.Catalog", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ParentId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<short>("Sort")
                        .HasColumnType("smallint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Catalog");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Catalog");
                });

            modelBuilder.Entity("Gov.Entity.Comment", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("ArticleId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Content")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("Status");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Gov.Entity.Dictionary", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<decimal?>("DecimalValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IntValue")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<int>("ValType")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.HasIndex("Type");

                    b.HasIndex("ValType");

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("Gov.Entity.EnterpriseExtend", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("EnterpriseExtends");
                });

            modelBuilder.Entity("Gov.Entity.EnterpriseInfo", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("BusinessScope")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Corporation")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RegAddress")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RegArea")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("RegDate")
                        .HasColumnType("timestamp");

                    b.Property<long>("RegisteredCapital")
                        .HasColumnType("bigint");

                    b.Property<string>("RegistrationStatus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UnionCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Corporation");

                    b.HasIndex("EndDate");

                    b.HasIndex("Name");

                    b.HasIndex("RegDate");

                    b.HasIndex("RegisteredCapital");

                    b.HasIndex("RegistrationStatus");

                    b.HasIndex("Type");

                    b.HasIndex("UnionCode");

                    b.ToTable("EnterpriseInfos");
                });

            modelBuilder.Entity("Gov.Entity.Menu", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Icon")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ParentId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Gov.Entity.Organization", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("County")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("ParentId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Province")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.HasIndex("Country");

                    b.HasIndex("Level");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("Province");

                    b.HasIndex("Status");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Gov.Entity.Personnel", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AddressDetail")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("Birthday")
                        .HasColumnType("timestamp");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ContractType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("County")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset?>("HireDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("IdentityCard")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsFullTime")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NickName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<byte[]>("OrganizationId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("PositionTitle")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Province")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RealName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("City");

                    b.HasIndex("Country");

                    b.HasIndex("HireDate");

                    b.HasIndex("IdentityCard");

                    b.HasIndex("IsFullTime");

                    b.HasIndex("JobTitle");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PositionTitle");

                    b.HasIndex("Province");

                    b.HasIndex("RealName");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("Gov.Entity.Product", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("CatalogId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<byte[]>("ExtendId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UniqueCode")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.HasIndex("ExtendId");

                    b.HasIndex("Name");

                    b.HasIndex("Status");

                    b.HasIndex("Title");

                    b.HasIndex("UniqueCode");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Gov.Entity.ProductExtend", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Detail")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("ProductExtends");
                });

            modelBuilder.Entity("Gov.Entity.Role", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Icon")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Status");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrder", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("AddressOrUrl")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("CompleteCount")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(5000)
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("PrincipalName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PrincipalPhone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TargetName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UniqueCode")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("EndDate");

                    b.HasIndex("Priority");

                    b.HasIndex("StartDate");

                    b.HasIndex("Status");

                    b.HasIndex("TargetName");

                    b.HasIndex("Type");

                    b.HasIndex("UniqueCode");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrderExecutor", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("ExecutorId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Feedback")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("WorkOrderId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("Status");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderExecutors");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrderFlowLog", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Content")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTimeOffset?>("CreatedTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Result")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("timestamp");

                    b.Property<byte[]>("WorkOrderExecutorId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedTime");

                    b.HasIndex("Status");

                    b.HasIndex("WorkOrderExecutorId");

                    b.ToTable("WorkOrderFlowLogs");
                });

            modelBuilder.Entity("MenuRole", b =>
                {
                    b.Property<byte[]>("MenusId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("RolesId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("MenusId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("MenuRole");
                });

            modelBuilder.Entity("Gov.Entity.ArticleCatalog", b =>
                {
                    b.HasBaseType("Gov.Entity.Catalog");

                    b.HasIndex("Level");

                    b.HasIndex("Name");

                    b.HasIndex("Type");

                    b.HasDiscriminator().HasValue("ArticleCatalog");
                });

            modelBuilder.Entity("Gov.Entity.ProductCatalog", b =>
                {
                    b.HasBaseType("Gov.Entity.Catalog");

                    b.HasIndex("Name");

                    b.HasIndex("Type");

                    b.HasDiscriminator().HasValue("ProductCatalog");
                });

            modelBuilder.Entity("AccountRole", b =>
                {
                    b.HasOne("Gov.Entity.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gov.Entity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AuthorityGroupRole", b =>
                {
                    b.HasOne("Gov.Entity.AuthorityGroup", null)
                        .WithMany()
                        .HasForeignKey("AuthorityGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gov.Entity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gov.Entity.Account", b =>
                {
                    b.HasOne("Gov.Entity.AccountExtend", "Extend")
                        .WithMany()
                        .HasForeignKey("ExtendId");

                    b.Navigation("Extend");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlowRelation", b =>
                {
                    b.HasOne("Gov.Entity.ApproveFlow", "Flow")
                        .WithMany("Relations")
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlowSteps", b =>
                {
                    b.HasOne("Gov.Entity.ApproveFlow", "ApproveFlow")
                        .WithMany("Steps")
                        .HasForeignKey("ApproveFlowId");

                    b.Navigation("ApproveFlow");
                });

            modelBuilder.Entity("Gov.Entity.Article", b =>
                {
                    b.HasOne("Gov.Entity.ArticleCatalog", "Catalog")
                        .WithMany("Articles")
                        .HasForeignKey("CatalogId");

                    b.HasOne("Gov.Entity.ArticleExtend", "Extend")
                        .WithMany()
                        .HasForeignKey("ExtendId");

                    b.Navigation("Catalog");

                    b.Navigation("Extend");
                });

            modelBuilder.Entity("Gov.Entity.Authority", b =>
                {
                    b.HasOne("Gov.Entity.AuthorityGroup", "Group")
                        .WithMany("Authorities")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Gov.Entity.Catalog", b =>
                {
                    b.HasOne("Gov.Entity.Catalog", "Parent")
                        .WithMany("Catalogs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Gov.Entity.Comment", b =>
                {
                    b.HasOne("Gov.Entity.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Gov.Entity.Menu", b =>
                {
                    b.HasOne("Gov.Entity.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Gov.Entity.Organization", b =>
                {
                    b.HasOne("Gov.Entity.Organization", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Gov.Entity.Personnel", b =>
                {
                    b.HasOne("Gov.Entity.Organization", "Organization")
                        .WithMany("Personnels")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Gov.Entity.Product", b =>
                {
                    b.HasOne("Gov.Entity.ProductCatalog", "Catalog")
                        .WithMany("Products")
                        .HasForeignKey("CatalogId");

                    b.HasOne("Gov.Entity.ProductExtend", "Extend")
                        .WithMany()
                        .HasForeignKey("ExtendId");

                    b.Navigation("Catalog");

                    b.Navigation("Extend");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrderExecutor", b =>
                {
                    b.HasOne("Gov.Entity.Account", "Executor")
                        .WithMany("WorkOrderExecutors")
                        .HasForeignKey("ExecutorId");

                    b.HasOne("Gov.Entity.WorkOrder", "WorkOrder")
                        .WithMany("Executors")
                        .HasForeignKey("WorkOrderId");

                    b.Navigation("Executor");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrderFlowLog", b =>
                {
                    b.HasOne("Gov.Entity.WorkOrderExecutor", "WorkOrderExecutor")
                        .WithMany("FlowLogs")
                        .HasForeignKey("WorkOrderExecutorId");

                    b.Navigation("WorkOrderExecutor");
                });

            modelBuilder.Entity("MenuRole", b =>
                {
                    b.HasOne("Gov.Entity.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gov.Entity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gov.Entity.Account", b =>
                {
                    b.Navigation("WorkOrderExecutors");
                });

            modelBuilder.Entity("Gov.Entity.ApproveFlow", b =>
                {
                    b.Navigation("Relations");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Gov.Entity.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Gov.Entity.AuthorityGroup", b =>
                {
                    b.Navigation("Authorities");
                });

            modelBuilder.Entity("Gov.Entity.Catalog", b =>
                {
                    b.Navigation("Catalogs");
                });

            modelBuilder.Entity("Gov.Entity.Menu", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Gov.Entity.Organization", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrder", b =>
                {
                    b.Navigation("Executors");
                });

            modelBuilder.Entity("Gov.Entity.WorkOrderExecutor", b =>
                {
                    b.Navigation("FlowLogs");
                });

            modelBuilder.Entity("Gov.Entity.ArticleCatalog", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Gov.Entity.ProductCatalog", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
